az login
az account list
az account set --subscription="Sub-ID"
az ad sp create-for-rbac -n <sp-name>  --role="Contributor" --scopes="/subscriptions/Sub-ID"
Creating 'Contributor' role assignment under scope '/subscriptions/Sub-ID'

This command will output 4 values:
{
  "appId": "00000000-0000-0000-0000-000000000000",
  "displayName": "azure-cli-2017-06-05-10-41-15",
  "password": "0000-0000-0000-0000-000000000000",
  "tenant": "00000000-0000-0000-0000-000000000000"
}
These values map to the Terraform variables like so:
    appId is the client_id defined above.
    password is the client_secret defined above.
    tenant is the tenant_id defined above.



Create service principal from azure cloudshell in powershell
az ad sp create-for-rbac -n terraform-sp --role="Contributor" --scopes="/subscriptions/435254ef-ead0-"
{
  "appId": "5b9e9bf0",
  "displayName": "terraform-sp",
  "password": "xPh8Q~JJWYF3",
  "tenant": "927aa68"
  "subscription": "435254ef-ead0-"
}

Add parameters in provider file for extra functions

features {
  virtual_machine {
    detach_implicit_data_disk_on_deletion   = false
    delete_os_disk_on_deletion              = true
    graceful_shutdown                       = false
    skip_shutdown_and_force_delete          = true
  }

  resource_group {
    prevent_deletion_if_contains_resources  = false
  }
}


To store statefile in storage account

terraform {
  backend "azurerm" {
    resource_group_name  = "rg_azure_2_tfstate"     # Resource Group containing the Storage Account
    storage_account_name = "stgacctfartifact"       # The Storage Account to store the state
    container_name       = "azure-tfstate"          # The Blob Container for the state
    key                  = "app.tfstate"            # The name of the state file
  }
}