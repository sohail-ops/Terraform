module "linux_vm" {
  source            = "./modules/linux-vm"
  vm_name           = var.vm_name
  rg_name           = module.rg.rg_name
  rg_id             = module.rg.rg_id
  location          = module.rg.rg_location
  subnet_id         = module.subnet.subnet_ids["private-subnet"]
  pip_id            = module.vm_pip.pip_id
  tags              = { "Environment" = "Dev" }
  vm_sku            = "Standard_D2as_v5"
  admin_username    = var.admin_username
  admin_password    = var.admin_password
  disable_pass_auth = false
  create_ssh_with_password = false
  
# Already declared in variable defaults so optional to use
  stoacc_type       = "StandardSSD_LRS"
  disk_size_gb      = 32
  image_publisher   = "Canonical"
  image_offer       = "ubuntu-24_04-lts"
  image_sku         = "server"
  image_version     = "latest"

  depends_on = [module.rg, module.subnet]
}


If "ssh-key" does not get generate after terraform apply completes use following commands to get the keys
terraform output -raw ssh_public_key > ssh-key/public_key.pem
terraform output -raw ssh_private_key > ssh-key/private_key.pem

Restrict the private_key for unnecessary permissions
sudo chmod 600 ssh-key/private_key.pem
ssh -i ssh-key/private_key.pem username@public-ip     # use -p port if port is other than 22